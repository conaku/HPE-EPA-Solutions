// Description
// This is a Jenkinsfile that deployes the cluster services.
// It will run the shell scripts in the appropriate jenkins slave nodes and deployes the services.

// Slave IP address
def IP_ADDRS = ['slave1':'15.213.95.217','slave2':'15.213.95.218']
def SPARK_MASTER_IP = '15.213.95.216'
def SPARK_MASTER_URL= "spark://${SPARK_MASTER_IP}:7077"
def SPARK_WEB_UI_PORT = 9092
// Function that will add the IP address to slaves file
def create_slaves_file(IP_ADDRS){
keys = IP_ADDRS.keySet();
for(String key in keys){
def ip = IP_ADDRS.get(key);
sh "echo ${ip} >> /root/scripts/slaves"
     }
}

// Function to transfer the customised artifacts to slaves
def transfer_artifacts(IP_ADDRS){
keys = IP_ADDRS.keySet();
for(String key in keys){
def ip = IP_ADDRS.get(key);
sh '''
su - root << EOF
sh "scp -r /var/lib/jenkins/workspace/Deployment_scripts/jenkins_deploy_without_ansible ${ip}:/root/scripts"
EOF
'''
     }
su '''
su - root << EOF
sh "scp -r /var/lib/jenkins/workspace/Deployment_scripts/jenkins_deploy_without_ansible ${SPARK_MASTER_IP}:/root/scripts"
EOF
'''
}

pipeline {
    agent none
    stages {
         // This stage will transfer all the artifacts that has been downloaded and modified from jenkins master to
         // jenkins slaves.
         stage('Transfer the artifacts'){
            agent{label 'master'}
            steps{
            transfer_artifacts(IP_ADDRS)
            }
        }
        // This stage will deploy spark master service on the node labeled spark_master in jenkins master and takes the
        // corresponding IP address and web-ui port as input.
        stage('Install Spark Master instance'){
            agent{label 'spark_master'}
            steps{
            sh 'touch /root/scripts/slaves'
            create_slaves_file(IP_ADDRS)  
            sh "sh /root/scripts/jenkins_deploy_without_ansible/spark_master_configure.sh ${SPARK_MASTER_IP} ${SPARK_WEB_UI_PORT}"
            sh 'rm -rf /root/scripts/slaves'
            }
        }
        
        // This stage will deploy the spark slave services on various nodes.
        stage('Install Spark Slave instances'){
        parallel{
            // This stage will deploy the spark slave service on node labeled spark_slave1 in Jenkins master
            stage('Install an instance of Spark Slave1'){
                agent{label 'spark_slave1'}
                steps{
                sh 'sh /root/scripts/jenkins_deploy_without_ansible/spark_slave_configure.sh'
                }
            }
            
            // This stage will deploy the spark slave service on node labeled spark_slave2 in Jenkins master
            stage('Install an instance of Spark Slave2'){
                agent{label 'spark_slave2'}
                steps{
                sh 'sh /root/scripts/jenkins_deploy_without_ansible/spark_slave_configure.sh'
                }
            }
        }
        }
        
        // This stage will start the spark cluster services.
        stage('Start the Spark cluster'){
            agent{label 'spark_master'}
            steps{
                sh 'sh /root/scripts/jenkins_deploy_without_ansible/spark_cluster_start.sh'
            }
        }
        
        // This stage will install the zeppelin notebook on the node labeled spark_master in Jenkins master and takes the 
        // spark master url as input.
        stage('Install zeppelin notebook for Spark cluster'){
            agent{label 'spark_master'}
            steps{
                 sh "sh /root/scripts/jenkins_deploy_without_ansible/zeppelin_install.sh ${SPARK_MASTER_URL}"
            }
        }
        
        // This stage will install Cassandra DB on the node labeled spark_master in Jenkins master and takes the 
        // corresponding IP address as input
        stage('Insatll Cassandra DB'){
            agent{label 'spark_master'}
            steps{
                 sh "sh /root/scripts/jenkins_deploy_without_ansible/cassandra_install.sh ${SPARK_MASTER_IP}"
            }
        }
        
        
    }
}
